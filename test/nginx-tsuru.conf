
user  nginx;
worker_processes  1;
load_module modules/ngx_http_echo_module.so;
load_module modules/ngx_http_headers_more_filter_module.so;
load_module modules/ngx_http_cache_purge_module.so;
load_module modules/ndk_http_module.so;
load_module modules/ngx_http_lua_module.so;
load_module modules/ngx_http_vhost_traffic_status_module.so;
load_module modules/ngx_http_fancyindex_module.so;
load_module modules/ngx_http_push_stream_module.so;
load_module modules/ngx_http_modsecurity_module.so;


daemon off;

pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    push_stream_shared_memory_size 1M;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';


    proxy_cache_path /var/cache/nginx keys_zone=cache_zone:100m;
    
    vhost_traffic_status_zone;
    vhost_traffic_status_histogram_buckets 0.002 0.005 0.01 0.02 0.05 0.1 0.2 0.5 1 2 5 10 15 20;
    
    server {
        listen 8080;
        listen 8443 ssl;
        ssl_certificate cert.pem;
        ssl_certificate_key key.pem;
        modsecurity on;

        location /channels-stats {
            # activate channels statistics mode for this location
            push_stream_channels_statistics;

            # query string based channel id
            push_stream_channels_path               $arg_id;
        }

        location /status {
            vhost_traffic_status_display;
            vhost_traffic_status_display_format html;
        }

        location /lua_content {
            # MIME type determined by default_type:
            default_type 'text/plain';

            content_by_lua_block {
                ngx.say('Hello,world!')
            }
        }

        location ~ ^/purge/(.+) {
           proxy_cache_purge  cache_zone $1$is_args$args;
        }
        
        location / {
            more_set_headers        'X-MyHeader: blah' 'X-MyHeader2: foo';
            modsecurity_rules_file  /etc/nginx/modsecurity_rules.conf;
            echo                    'nginx config check ok';
        }
    }
 
   
}
